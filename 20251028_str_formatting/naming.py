# Традиции и правила хорошего тона именования функций, классов и переменных

# PEP 8 Python Enchancement proposals

# Однобуквенные переменные - ЗЛО

i = 0  # Переменная-счётчик. Переменная-индекс i - index.
'''Часто используется в циклах с заданным числом итераций,
перебирая числа диапазона, представляя собой номер итерации
'''

c = 10  # counter - счётчик, часто - "в другую сторону", обратный отсчет
# c != с
# Русская с и английская c - самая плохая однобуквенная переменная

O = 0
l = 1
# Переменные o, O и l похожи на 0 и 1
s = 'Vasya'    # переменная для строки
l = [1, 2, 3]  # переменная для списка (list)


# Ещё плохие примеры (встроенные функции - можно, но нежелательно):
list = [1, 2, 3]
str = 'mystr'
int = 9
# Теперь int "Перестал работать!"
# int('99')

# Невозможные примеры (keywords, ключевые слова, зарезервированные слова):
# while = 0
# if = 6
# for = 45

# Переменные и функции принято называть с маленькой буквы
# Если в название переменной или функции надо добавить более 1 слова,
# в питоне принято использовать snake_case - все слова с маленьких букв, 
# между ними - подчеркивание

# Если в названии вашей переменной более трех слов - вам пора отдохнуть
# Хорошие примеры:
tasty_fruit = ['pineapple', 'banana']

list_of_books = ['Book 1', 'Book 2']

# Отступы в питоне:
# Управляющие конструкции содержат 
# 1. ключевое слово 
# 2. дополнительную информацию
# 3. двоеточие. После него дальше пойдёт блок кода!
# В Python блок кода заканчивается, когда заканчивается отступ, 
# но не считая пустых строк!

a = 9 
if a > 70:
    print('Ура!')

    print( 'Я тоже рад!' )
print( 'А мне все равно!' )  # За пределами блока кода


while a > 0:

    #  Я комментарий
# А я - ужасный, сбивающий с толку комментарий, тоже не влияющий на отступ!

    print('a', a)
    a -= 2  # не a - 2   !!!

# На "верхнем" уровне функции разделяют двумя пустыми строчками
# А методы в классе - одной

# https://peps.python.org/pep-0020/
import this